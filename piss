-- Get the LocalPlayer and their Character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Teleport the character to specified coordinates
character:SetPrimaryPartCFrame(CFrame.new(Vector3.new(420.3534240722656, 48.02681350708008, 39.21576690673828)))

-- Wait a moment for the teleport to complete (adjust as needed)
wait(1)

-- Script to delete objects and create baseplates
local oilBarrelName = "oil barrel" -- Name of the oil barrel objects you want to remove
local partNameToRemove = "Part" -- Name of the parts you want to remove
local objectNames = {
    "Block",
    "Object4",
    "Object5",
    "Object6",
    "Object7",
    "Object8",
    "Object9",
    "Object10"
} -- Names of the objects you want to remove
local gateNameToRemove = "Gate" -- Name of the gate objects you want to remove
local doorNameToRemove = "Door" -- Name of the door objects you want to remove
local modelNameToRemove = "Model" -- Name of the model objects you want to remove
local cinderBlockName = "cinder block" -- Name of the cinder block objects you want to remove
local additionalObjectNames = {
    "PluginGrass",
    "Meshes/mountain",
    "window",
    "big window",
    "concrete barrier",
    "wooden fence",
    "Apartment",
    "Sewer Light",
    "Trash",
    "Wedge"
} -- Additional names of objects you want to remove
local cashiersFolderName = "Cashiers" -- Name of the Cashiers folder
local baseplateSize = Vector3.new(25, 1, 25) -- Size of the baseplate, increased for better coverage
local baseplateOffset = 5 -- Offset in studs to move the baseplate further underneath (adjust as needed)

-- Function to delete all objects with the specified name within the workspace
local function deleteAllObjectsByName(name)
    local found = false
    for _, descendant in pairs(workspace:GetDescendants()) do
        if descendant.Name == name then
            print("Found object to delete: " .. descendant.Name)
            descendant:Destroy()
            found = true
        end
    end
    if not found then
        print("No object named " .. name .. " found in the workspace.")
    end
end

-- Function to create a larger baseplate under the specified CA$HIER object
local function createBaseplateUnderObject(object)
    local baseplate = Instance.new("Part")
    baseplate.Size = baseplateSize
    baseplate.Anchored = true
    baseplate.Name = "Baseplate"

    -- Ensure we have a valid position
    local referencePart = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart
    if referencePart then
        baseplate.Position = referencePart.Position - Vector3.new(0, referencePart.Size.Y / 2 + baseplate.Size.Y / 2 + baseplateOffset, 0)
        baseplate.Parent = workspace -- Place the baseplate directly in the workspace
        print("Baseplate created under object: " .. object.Name)
    else
        print("No valid reference part found for object: " .. object.Name)
        baseplate:Destroy()
    end
end

-- Delete all specified objects within the workspace
deleteAllObjectsByName(oilBarrelName)
deleteAllObjectsByName(partNameToRemove)
for _, objectName in ipairs(objectNames) do
    deleteAllObjectsByName(objectName)
end
deleteAllObjectsByName(gateNameToRemove)
deleteAllObjectsByName(doorNameToRemove)
deleteAllObjectsByName(modelNameToRemove)
deleteAllObjectsByName(cinderBlockName)

-- Delete additional specified objects
for _, additionalObjectName in ipairs(additionalObjectNames) do
    deleteAllObjectsByName(additionalObjectName)
end

-- Create a larger baseplate under each CA$HIER object in the Cashiers folder
local cashiersFolder = workspace:FindFirstChild(cashiersFolderName)
if cashiersFolder and cashiersFolder:IsA("Folder") then
    for _, child in pairs(cashiersFolder:GetChildren()) do
        if child.Name == "CA$HIER" and child:IsA("Model") then
            createBaseplateUnderObject(child)
        end
    end
else
    warn("Folder not found or is not a Folder:", cashiersFolderName)
end


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- box train

-- Check the value of getgenv().boxtrain
if getgenv().boxtrain == "true" then
    print("Box train is true. Loading boxing training script.")
    print("Boxing training script loaded.")

    -- Ensure the game is fully loaded
    if not game:IsLoaded() then
        game.Loaded:Wait()
        task.wait(2)
    end

    -- Get the local player
    local player = game:GetService("Players").LocalPlayer

    -- Wait until the player and their character are loaded
    repeat task.wait(0.2) until player and player.Character

    -- Function to safely wait for a child with a timeout
    local function waitForChildWithTimeout(parent, childName, timeout)
        local child = parent:FindFirstChild(childName)
        local startTime = tick()
        while not child and tick() - startTime < timeout do
            child = parent:FindFirstChild(childName)
            task.wait(0.1)
        end
        return child
    end

    -- Wait for "leaderstats" with a timeout of 10 seconds
    local leaderstats = waitForChildWithTimeout(player, "leaderstats", 10)
    if not leaderstats then
        warn("Failed to find 'leaderstats' within the timeout period.")
    end

    -- Define target positions
    local firstTargetPosition = Vector3.new(-277.90643310546875, 22.570423126220703, -1111.6998291015625)
    local secondTargetPosition = CFrame.new(-237.21588134765625, 22.067293167114258, -1141.951171875)

    -- Teleport the player to the first target position
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(firstTargetPosition)
    else
        warn("Failed to teleport player. 'HumanoidRootPart' not found.")
    end

    -- Function to perform normal attack with "Combat" tool
    local function performNormalAttack()
        if player.Backpack:FindFirstChild("Combat") then
            player.Backpack.Combat.Parent = player.Character -- Move tool to character
        end

        if player.Character:FindFirstChild("Combat") then
            player.Character.Combat:Activate() -- Start attacking
            player.Character.Combat:Deactivate() -- Stop attacking
        else
            warn("Failed to perform attack. 'Combat' tool not found.")
        end
    end

    -- Perform normal attack for 5 minutes
    local endTime = os.time() + 300 -- 300 seconds = 5 minutes
    repeat
        performNormalAttack()
        task.wait(0.5) -- Adjust interval between attacks as needed
    until os.time() >= endTime

    -- Wait for 3 seconds after attacking
    task.wait(3)

    -- Function to teleport the player to the second target position
    local function teleportPlayer()
        if game.Players.LocalPlayer and game.Players.LocalPlayer.Character then
            local character = game.Players.LocalPlayer.Character
            if character:FindFirstChild("HumanoidRootPart") then
                character.HumanoidRootPart.CFrame = secondTargetPosition
            else
                warn("HumanoidRootPart not found.")
            end
        else
            warn("LocalPlayer or Character not found.")
        end
    end

    -- Teleport the player to the second target position
    teleportPlayer()

    -- Function to buy the item
    local function buyItem()
        -- Find the item in the shop
        local itemName = "Boxing Moveset (Require: Max Box Stat) - $0"
        local itemToBuy = workspace.Ignored.Shop:FindFirstChild(itemName)

        if itemToBuy then
            -- Click the item's ClickDetector
            fireclickdetector(itemToBuy.ClickDetector)
        else
            warn(itemName .. " not found in the shop.")
        end
    end

    -- Buy the item
    buyItem()
else
    print("Box train is false. Script will not run.")
end

-- Main logic
teleportPlayer()

-- Wait for the player to teleport
task.wait(2)

buyItem()

else
    print("Box train is false. Skipping boxing training script.")
end

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

game:GetService("RunService"):Set3dRenderingEnabled(false)
pcall(function() UserSettings().GameSettings.MasterVolume = 0 end)
pcall(function() settings().Rendering.QualityLevel = "Level01" end)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

getgenv().Enabled = true
getgenv().Dis = function()
	Enabled = false

	for i,v in pairs(workspace:GetDescendants()) do 
		if (v:IsA("Seat")) or (v:IsA("VehicleSeat")) then 
			v.Disabled = true
		end
	end
end

if (not game:IsLoaded()) then 
	game.Loaded:Wait()
	task.wait(2)
end

repeat task.wait(0.2) until (game:GetService("Players").LocalPlayer) and (game:GetService("Players").LocalPlayer.Character)

local Players = game:GetService("Players")
local Cashiers = workspace.Cashiers
local Player = Players.LocalPlayer

loadstring(game:HttpGet("https://github.com/applless/RandomScripts/raw/main/AntiAfk"))()
pcall(function()local a=game:GetService("ReplicatedStorage").MainEvent;local b={"CHECKER_1","TeleportDetect","OneMoreTime"}local c;c=hookmetamethod(game,"__namecall",function(...)local d={...}local self=d[1]local e=getnamecallmethod()local f=getcallingscript()if e=="FireServer"and self==a and table.find(b,d[2])then return end return c(...)end)end)

for i,v in pairs(workspace:GetDescendants()) do 
	if (v:IsA("Seat")) or (v:IsA("VehicleSeat")) then 
		v.Disabled = true
	end
end



local GetClosestPart = function(Table)
	local ClosestPart = nil

	for i,v in pairs(Table) do
		if (ClosestPart == nil) then
			ClosestPart = v
		else
			if ((Player.Character.HumanoidRootPart.Position - v.Position).Magnitude) < ((ClosestPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude) then
				ClosestPart = v
			end
		end
	end
	
	return ClosestPart
end

local CheckKOed = function()
	if (Player.Character.BodyEffects["K.O"].Value == true) then 
		Player.Character.Humanoid.Health = 0 

		for i,v in pairs(Player.Character:GetChildren()) do 
			if (v:IsA("BasePart")) then 
				v:Destroy()
			end
		end
	end
end

local GetCashier = function()
	local AvailableCashiers = {}
	for i,v in pairs(Cashiers:GetChildren()) do 
		if (v:FindFirstChild("Humanoid")) and (v.Humanoid.Health > 0) then 
			AvailableCashiers[#AvailableCashiers+1] = v.Open
		end
	end
	
	local ClosestPart = GetClosestPart(AvailableCashiers)
	
	if (ClosestPart) and (ClosestPart.Parent) then 
		return ClosestPart.Parent
	else 
		return nil
	end

end

local GetCashParts = function()
	local CashParts = {}
	for i,v in pairs(workspace.Ignored.Drop:GetChildren()) do 
		if (v.Name == "MoneyDrop") and ((Player.Character.HumanoidRootPart.Position - v.Position).Magnitude < 13) then 
			CashParts[#CashParts+1] = v
		end
	end
	
	return CashParts
end


task.spawn(function()
	while true and task.wait(0.33) do 
		if (Enabled == true) and (Player.Character) and (Player.Character:FindFirstChild("FULLY_LOADED_CHAR"))  then 
			local Cashier = nil
			repeat 
				Cashier = GetCashier()
				task.wait()
			until (Cashier ~= nil)

			
			repeat 
				if (Player.Backpack:FindFirstChild("Combat")) then 
					task.wait(0.77)
					pcall(function()
						Player.Backpack.Combat.Parent = Player.Character
					end)
					task.wait()
				end
				Player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
				Player.Character.HumanoidRootPart.CFrame = Cashier.Open.CFrame * CFrame.Angles(0, math.random(-180, 0), 0)
				
				if (Player.Character:FindFirstChild("Combat")) then 
					Player.Character.Combat:Activate()
					--Player.Character.Combat:Deactivate() Disabled because super punch is faster and more reliable on low fps.
				end

				
				task.wait()
			until (Cashier.Humanoid.Health <= 0) or (Player.Character.Humanoid.Health <= 0) or (Player.Character.BodyEffects["K.O"].Value == true) or (Enabled == false)
			
			pcall(CheckKOed)
			
			repeat 
				local CashParts = GetCashParts()
				
				Player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
				Player.Character.HumanoidRootPart.CFrame = Cashier.Open.CFrame + Vector3.new(0, 2, 0)
				
				for i,v in pairs(CashParts) do 
					if (v:FindFirstChild("ClickDetector")) then 
						fireclickdetector(v.ClickDetector)
					end
				end

				task.wait()
			until (#CashParts <= 0) or (Player.Character.Humanoid.Health <= 0) or (Player.Character.BodyEffects["K.O"].Value == true) or (Enabled == false)
			
			pcall(CheckKOed)
		end
	end
end)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- Use existing getgenv().fps if set, otherwise default to 60
getgenv().fps = getgenv().fps or 60

local function controlFPS()
    local RunService = game:GetService("RunService")
    while true do
        local t0 = tick()
        RunService.Heartbeat:Wait()
        repeat until (t0 + 1/getgenv().fps) < tick()
    end
end

spawn(controlFPS)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
